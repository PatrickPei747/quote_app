{"version":3,"file":"static/js/884.7345239a.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC+DnI,EAzDkB,SAACH,GACjB,IAAMI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UACrB,GAAoCE,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAqBhC,OACE,UAAC,EAAAC,SAAQ,YACP,SAAC,KAAM,CACLC,KAAMH,EACNI,QAAS,SAACC,GAAQ,MAChB,qEAAqE,KAGzE,SAAC,EAAI,WACH,kBAAMC,QAjBe,WACzBL,GAAc,EAChB,EAeyCR,UAAWc,EAAaC,SA5BjE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBf,EAAegB,QAAQC,MACvCC,EAAchB,EAAac,QAAQC,MAIzCrB,EAAMuB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAmB6F,UACpFtB,EAAM0B,YACL,gBAAKzB,UAAWc,EAAe,UAC7B,SAACY,EAAA,EAAc,OAInB,iBAAK1B,UAAWc,EAAe,WAC7B,kBAAOa,QAAQ,SAAQ,SAAC,YACxB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK3B,QAEtC,iBAAKH,UAAWc,EAAe,WAC7B,kBAAOa,QAAQ,OAAM,SAAC,UACtB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKzB,QAEpC,gBAAKL,UAAWc,EAAe,UAC7B,mBAAQkB,QA7BY,WAC5BxB,GAAc,EAChB,EA2BkDR,UAAU,MAAK,SAAC,uBAMpE,E,kBCpCA,EAnBiB,WACb,OAAgCiC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACS,cAAXH,GACAC,EAAQG,KAAK,UAErB,GAAG,CAACJ,EAAQC,IAMZ,OACI,SAAC,EAAS,CAACZ,UAAsB,YAAXW,EAAsBd,WALxB,SAAAmB,GACpBN,EAAYM,EAChB,GAKJ,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport styles from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt \n        when={isEntering} \n        message={(location) => \n          'Are you sure you want to leave? All your entered data will be lost!'\n        } \n      />\n      <Card>\n        <form onFocus={formFocusedHandler} className={styles.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={styles.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={styles.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={styles.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={styles.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nconst NewQuote = () => {\n    const { sendRequest, status } = useHttp(addQuote);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (status === 'completed') {\n            history.push('/quotes');\n        }\n    }, [status, history]);\n\n    const addQuoteHandler = quoteData => {\n        sendRequest(quoteData);\n    };\n\n    return (\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\n    );\n};\n\nexport default NewQuote;"],"names":["props","className","classes","children","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","Fragment","when","message","location","onFocus","styles","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}