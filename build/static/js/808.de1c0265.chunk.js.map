{"version":3,"file":"static/js/808.de1c0265.chunk.js","mappings":"4MACA,EAAuB,wB,SCmBvB,EAhBkB,SAACA,GACjB,OACE,gBAAIC,UAAWC,EAAY,WACzB,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAI,CAACH,UAAU,MAAMI,GAAE,kBAAaL,EAAMM,IAAK,SAAC,sBAKvD,ECjBA,EAAuB,wBAAvB,EAAyD,2BCiDzD,EAlCkB,SAACN,GACjB,IAXkBO,EAAQC,EAWpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAGXC,EAA8C,QADhC,IAAIC,gBAAgBH,EAASI,QACbC,IAAI,QAElCC,GAjBYV,EAiBaP,EAAMO,OAjBXC,EAiBmBK,EAhBtCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAExC,KAgBA,OACE,UAAC,EAAAe,SAAQ,YACP,gBAAKpB,UAAWC,EAAe,UAC7B,oBAAQoB,QAPe,WAC3Bb,EAAQc,KAAK,GAAD,OAAIZ,EAASa,SAAQ,iBAAUX,EAAkB,MAAQ,OACvE,EAK4C,UAAC,QAC/BA,EAAkB,aAAe,kBAG3C,eAAIZ,UAAWC,EAAY,SACxBe,EAAYQ,KAAI,SAACC,GAAK,OACrB,SAAC,EAAS,CAERpB,GAAIoB,EAAMpB,GACVF,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMpB,GAIX,QAKZ,E,2BC/CA,EAA2B,gCCc3B,EAXsB,WACpB,OACE,iBAAKL,UAAWC,EAAgB,WAC9B,uBAAG,sBACH,SAAC,KAAI,CAACD,UAAU,MAAMI,GAAG,aAAY,SAAC,kBAK5C,ECwBA,EA9BkB,WACd,OAA0DsB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAAxEC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAcC,EAAY,EAAlBC,KAAoBC,EAAK,EAALA,MAMjD,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GACJ,GAAG,CAACA,IAEW,YAAXC,GAEI,gBAAK7B,UAAU,WAAU,UACrB,SAACkC,EAAA,EAAc,MAKvBF,GAEI,cAAGhC,UAAU,mBAAkB,SAAEgC,IAI1B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,QAKzD,SAAC,EAAS,CAAC7B,OAAQwB,KAJZ,SAAC,EAAa,GAM7B,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__Q6KwW\"};","import { Link } from 'react-router-dom';\n\nimport styles from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={styles.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__MLz6k\",\"sorting\":\"QuoteList_sorting__GDrEn\"};","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport styles from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuote = sortQuotes(props.quotes, isSortAscending);\n\n  const changeSortingHandler = () => {\n    history.push(`${location.pathname}?sort=${(isSortAscending ? 'dec' : 'asc')}`);\n  };\n\n  return (\n    <Fragment>\n      <div className={styles.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={styles.list}>\n        {sortedQuote.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__EUQsM\"};","import { Link } from 'react-router-dom';\n\nimport styles from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={styles.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\n\nconst AllQuotes = () => {\n    const { sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\n\n    useEffect(() => {\n        sendRequest();\n    }, [sendRequest]);\n\n    if (status === 'pending') {\n        return (\n            <div className='centered'>\n                <LoadingSpinner />\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <p className='centered focused'>{error}</p>\n        );\n    }\n\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n        return <NoQuotesFound />;\n    }\n\n    return (\n        <QuoteList quotes={loadedQuotes} />\n    );\n};\n\nexport default AllQuotes;"],"names":["props","className","styles","text","author","to","id","quotes","ascending","history","useHistory","location","useLocation","isSortAscending","URLSearchParams","search","get","sortedQuote","sort","quoteA","quoteB","Fragment","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}