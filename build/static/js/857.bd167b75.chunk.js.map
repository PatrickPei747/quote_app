{"version":3,"file":"static/js/857.bd167b75.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import styles from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={styles.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__9cxIN\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__C3cQf\",\"loading\":\"NewCommentForm_loading__aSq20\",\"control\":\"NewCommentForm_control__iR6jS\",\"actions\":\"NewCommentForm_actions__NC323\"};","import { useRef, useEffect } from 'react';\n\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\n\nimport styles from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { onAddedComment } = props;\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredComment = commentTextRef.current.value;\n\n    sendRequest({commentData: { text: enteredComment }, quoteId: props.quoteId});\n  };\n\n  return (\n    <form className={styles.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={styles.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={styles.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__+vwzS\"};","import styles from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={styles.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__UVWAR\"};","import CommentItem from './CommentItem';\nimport styles from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={styles.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport styles from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No Comments Were Added Yet!</p>\n  }\n  \n  return (\n    <section className={styles.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm onAddedComment={addedCommentHandler} quoteId={quoteId} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments'\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\n\nconst QuoteDetail = () => {\n    const params = useParams();\n    const match = useRouteMatch();\n\n    const { quoteId } = params;\n\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\n\n    useEffect(() => {\n        sendRequest(quoteId)\n    }, [sendRequest, quoteId]);\n\n    if (status === 'pending') {\n        return (\n            <div className='centered'>\n                <LoadingSpinner />\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <p className='centered focused'>{error}</p>\n        );\n    }\n\n    if (!loadedQuote.text) {\n        return <p>No Quote Found!</p>\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n            <Route path={match.path} exact>\n                <div className='centered'>\n                    <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n\n    );\n};\n\nexport default QuoteDetail;"],"names":["props","className","styles","text","author","commentTextRef","useRef","onAddedComment","useHttp","addComment","sendRequest","status","error","useEffect","submitFormHandler","event","preventDefault","enteredComment","current","value","commentData","quoteId","onSubmit","LoadingSpinner","htmlFor","id","rows","ref","comments","map","comment","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","params","match","useRouteMatch","getSingleQuote","loadedQuote","Fragment","path","exact","to","url"],"sourceRoot":""}