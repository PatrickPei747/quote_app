{"ast":null,"code":"var _jsxFileName = \"/Users/haihiroshiura/Desktop/React/quote_app/src/pages/QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Patrick',\n  text: 'Today is Boxing Day!'\n}, {\n  id: 'q2',\n  author: 'Haopu',\n  text: 'Chicken livers are delicious!'\n}];\nconst QuoteDetail = () => {\n  _s();\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteDetail, \"nRtqx6m5yRdSbvBfcBhhz2S/PNY=\", false, function () {\n  return [useParams, useRouteMatch, useHttp];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Fragment","useParams","Route","Link","useRouteMatch","HighlightedQuote","Comments","useHttp","getSingleQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","params","match","sendRequest","status","data","loadedQuote","error","quote","find","quoteId","path","url"],"sources":["/Users/haihiroshiura/Desktop/React/quote_app/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments'\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\n\nconst DUMMY_QUOTES = [\n    { id: 'q1', author: 'Patrick', text: 'Today is Boxing Day!' },\n    { id: 'q2', author: 'Haopu', text: 'Chicken livers are delicious!' }\n];\n\nconst QuoteDetail = () => {\n    const params = useParams();\n    const match = useRouteMatch();\n\n    const { sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\n\n    const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n    if (!quote) {\n        return <p>No Quote Found!</p>\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={quote.text} author={quote.author} />\n            <Route path={match.path} exact>\n                <div className='centered'>\n                    <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n\n    );\n};\n\nexport default QuoteDetail;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAExE,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,YAAY;AAAC;AAE5C,MAAMC,YAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAuB,CAAC,EAC7D;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAgC,CAAC,CACvE;AAED,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,MAAM,GAAGb,SAAS,EAAE;EAC1B,MAAMc,KAAK,GAAGX,aAAa,EAAE;EAE7B,MAAM;IAAEY,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC,WAAW;IAAEC;EAAK,CAAC,GAAGb,OAAO,CAACC,cAAc,EAAE,IAAI,CAAC;EAEtF,MAAMa,KAAK,GAAGZ,YAAY,CAACa,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACX,EAAE,KAAKI,MAAM,CAACS,OAAO,CAAC;EAErE,IAAI,CAACF,KAAK,EAAE;IACR,oBAAO;MAAA,UAAG;IAAe;MAAA;MAAA;MAAA;IAAA,QAAI;EACjC;EAEA,oBACI,QAAC,QAAQ;IAAA,wBACL,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACT,IAAK;MAAC,MAAM,EAAES,KAAK,CAACV;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5D,QAAC,KAAK;MAAC,IAAI,EAAEI,KAAK,CAACS,IAAK;MAAC,KAAK;MAAA,uBAC1B;QAAK,SAAS,EAAC,UAAU;QAAA,uBACrB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAET,KAAK,CAACU,GAAI,WAAW;UAAA,UAAC;QAAa;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IAC3E;MAAA;MAAA;MAAA;IAAA,QACF,eACR,QAAC,KAAK;MAAC,IAAI,EAAG,GAAEV,KAAK,CAACS,IAAK,WAAW;MAAA,uBAClC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACR;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAGnB,CAAC;AAAC,GA1BIX,WAAW;EAAA,QACEZ,SAAS,EACVG,aAAa,EAE8BG,OAAO;AAAA;AAAA,KAJ9DM,WAAW;AA4BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}